@model IReadOnlyList<Application.Queries.ProductCategory.ViewModels.CategoryMenuViewModel>

@{
    string font = CultureInfo.CurrentUICulture.Name! == "en-US" ? "English" : ""!;
    string align = CultureInfo.CurrentUICulture.Name! == "en-US" ? "left" : "right"!;
    string dir = CultureInfo.CurrentUICulture.Name! == "en-US" ? "ltr" : "rtl"!;

} 

<div class="space-y-3 pl-2 " style="text-align:@align" dir="@dir">
    <div>
        @if (CultureInfo.CurrentUICulture.Name == "en-US")
        {
            @foreach (var category in Model.OrderBy(o => o.DisplayPriority))
            {
                <h4 dir="ltr" class="text-sm mt-3 @font text-gray-800 mb-1">


                    <a class="@font" asp-controller="Product" asp-action="ProductCategory" asp-route-patterns="@category.Id">
                        @category.TitleEn
                    </a>
                </h4>
                @if (category.SubCategories.Any())
                {
                    @await Html.PartialAsync("Partial/_CategorySubMenu", category.SubCategories)
                }

            }
        }
        else
        {
            @foreach (var category in Model.OrderBy(o => o.DisplayPriority))
            {

                <h4 dir="ltr" class="text-sm @font text-gray-800 mb-1 mt-3 ">
               
                    <a class="@font" asp-controller="Product" asp-action="ProductCategory" asp-route-patterns="@category.Id">
                        @category.TitleFa
                </a>  
                </h4>
                @if (category.SubCategories.Any())
                {
                @await Html.PartialAsync("Partial/_CategorySubMenu", category.SubCategories)
                }

            }
        }






    </div>


</div>